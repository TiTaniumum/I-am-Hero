<Application x:Class="I_am_Hero_WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:I_am_Hero_WPF.Properties" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:I_am_Hero_WPF.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="MainWindow.xaml">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Подключение тем Material Design -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/Generic.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Определение цветовой схемы -->
            <materialDesign:BundledTheme x:Key="AppTheme" BaseTheme="Light"/>


            <!-- Глобальный стиль для кнопок -->
            <Style x:Key="RoundedButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Width" Value="90"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="8"
                                    Padding="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1"/>
                                </Border.RenderTransform>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Анимация -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1.03" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1.03" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1" Duration="0:0:0.2" />
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Глобальный стиль для кнопок в настройках -->
            <Style x:Key="OutlinedAnimatedButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Width" Value="90"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="BorderBrush" Value="Black"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="BorderElement" 
                                    CornerRadius="8"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    RenderTransformOrigin="0.5,0.5">

                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BorderElement" Property="Background" 
                                            Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="BorderElement" Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- TextBox -->
            <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="White"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    CornerRadius="10">
                                <ScrollViewer Margin="5" x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- ComboBox -->
            <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <!-- Основное содержимое ComboBox -->
                                    <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          Margin="5,0,30,0"
                                          VerticalAlignment="Center"/>

                                    <!-- Кнопка-стрелка для выпадающего списка -->
                                    <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Background="Transparent"
                                      BorderThickness="0"
                                      HorizontalAlignment="Right"
                                      Width="25"
                                      Height="30"
                                      Padding="5">
                                        <Path Data="M 0 0 L 4 4 L 8 0" 
                                              Width="8" Height="4" 
                                              Stroke="Black" StrokeThickness="2"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </ToggleButton>

                                    <!-- Выпадающий список -->
                                    <Popup Name="Popup"
                                           Placement="Bottom"
                                           IsOpen="{TemplateBinding IsDropDownOpen}"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           PopupAnimation="Slide">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                                CornerRadius="0 0 10 10">
                                            <ScrollViewer MaxHeight="200">
                                                <StackPanel IsItemsHost="True"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- DatePicker -->
            <Style x:Key="CustomDatePickerStyle" TargetType="DatePicker">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="0,5,0,5"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePicker">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="10"
                                        Padding="5">
                                    <Grid>
                                        <DatePickerTextBox x:Name="PART_TextBox"
                                               Foreground="{TemplateBinding Foreground}"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               FontSize="{TemplateBinding FontSize}"
                                               MinWidth="250"/>

                                        <Button x:Name="PART_Button"
                                                Width="20"
                                                Height="20"
                                                HorizontalAlignment="Right"
                                                Margin="5,0,5,0"
                                                Background="Transparent"
                                                BorderThickness="0">
                                            <TextBlock Text="📅" FontSize="14"/>
                                        </Button>
                                    </Grid>
                                </Border>

                                <Popup x:Name="PART_Popup"
                                       Placement="Bottom"
                                       StaysOpen="False"
                                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <Border Background="White"
                                            BorderBrush="Black"
                                            BorderThickness="1"
                                            CornerRadius="5">
                                        <Calendar x:Name="PART_Calendar"/>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ToggleButton -->
            <Style x:Key="CustomToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <!-- Фон переключателя -->
                                <Border x:Name="BackgroundBorder"
                            Width="50" Height="25"
                            CornerRadius="12"
                            Background="{TemplateBinding Background}"/>

                                <!-- Кружок-переключатель -->
                                <Ellipse x:Name="ToggleIndicator"
                             Width="20" Height="20"
                             Fill="White"
                             HorizontalAlignment="Left"
                             Margin="2"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Включённое состояние -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="MediumSeaGreen"/>
                                    <Setter TargetName="ToggleIndicator" Property="HorizontalAlignment" Value="Right"/>
                                    <Setter TargetName="ToggleIndicator" Property="Margin" Value="2,0,2,0"/>
                                </Trigger>

                                <!-- Выключенное состояние -->
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="Gray"/>
                                    <Setter TargetName="ToggleIndicator" Property="HorizontalAlignment" Value="Left"/>
                                    <Setter TargetName="ToggleIndicator" Property="Margin" Value="2,0,2,0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <!-- PasswordBox -->
            <Style x:Key="CustomPasswordBoxStyle" TargetType="PasswordBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border Background="White"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    CornerRadius="10">
                                <ScrollViewer Margin="5" x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Button -->
            <Style TargetType="Button" x:Key="MaterialDesignIconButton">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Content" Value="{Binding}" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <!-- EN/RU locale -->
            <Style x:Key="LanguageTextStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="DarkBlue"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="5"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Foreground" Value="RoyalBlue"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- NumericTextBox -->
            <Style x:Key="NumericTextBoxStyle" TargetType="TextBox">
                <Setter Property="MinWidth" Value="50"/>
                <Setter Property="MaxWidth" Value="60"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>

            <!-- CheckBox -->
            <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Gray"/>

                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="Green"/>
                        <Setter Property="BorderBrush" Value="DarkGreen"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <!-- Common -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:BoolToWidthConverter x:Key="BoolToWidthConverter"/>
        </ResourceDictionary>
    </Application.Resources>
</Application>
